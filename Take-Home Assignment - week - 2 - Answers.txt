1. Pull total number of orders that were completed on 18th March 2023

SELECT COUNT(*) AS total_completed_orders
FROM Orders
WHERE completion_date = '2023-03-18';


2. Pull total number of orders that were completed on 18th March 2023 with the first name ‘John’ and last name ‘Doe’

SELECT COUNT(*) AS total_completed_orders
FROM Orders o
INNER JOIN Customers c ON o.customer_id = c.customer_id
WHERE o.completion_date = '2023-03-18' AND c.first_name = 'John' AND c.last_name = 'Doe';


3. Pull total number of customers that purchased in January 2023 and the average amount spend per customer

SELECT COUNT(DISTINCT c.customer_id) AS total_customers,
       AVG(p.purchase_amount) AS average_amount_spent
FROM Customers c
INNER JOIN Purchases p ON c.customer_id = p.customer_id
WHERE DATEPART(YEAR, p.purchase_date) = 2023 AND DATEPART(MONTH, p.purchase_date) = 1;


4. Pull the departments that generated less than $600 in 2022

SELECT department_name
FROM Departments
WHERE year = 2022
GROUP BY department_name
HAVING SUM(revenue) < 600;


5. What is the most and least revenue we have generated by an order

SELECT
  MAX(order_revenue) AS max_revenue,
  MIN(order_revenue) AS min_revenue
FROM (SELECT SUM(order_amount) AS order_revenue FROM Orders GROUP BY order_id) AS revenue_totals;


6. What were the orders that were purchased in our most lucrative order

WITH MostLucrativeOrder AS (
  SELECT order_id, SUM(order_amount) AS order_revenue
  FROM Orders
  GROUP BY order_id
  ORDER BY order_revenue DESC
  LIMIT 1
)

SELECT o.*
FROM MostLucrativeOrder mo
JOIN Orders o ON mo.order_id = o.order_id;
